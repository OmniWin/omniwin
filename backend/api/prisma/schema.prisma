// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Nft {
  id_nft         Int         @id @default(autoincrement())
  id_lot         Int         @unique
  total_tickets  Int         @default(0)
  bonus_tickets  Int         @default(0)
  tickets_bought Int         @default(0)
  ticket_price   BigInt
  transactions   Int         @default(0)
  end_timestamp  Int
  fee            Int         @default(600)
  closed         Boolean     @default(false)
  buyout         Boolean     @default(false)
  asset_claimed  Boolean     @default(false)
  tokens_claimed Boolean     @default(false)
  owner          String
  signer         String?
  token          String
  token_id       String
  amount         String
  asset_type     AssetType
  data           String
  network        NetworkType
  trendingScore  Int         @default(0)
  created_at     DateTime    @default(now())
  updated_at     DateTime    @default(now()) @updatedAt

  // @@unique([id_lot], name: "id_lot")
  @@index([token, token_id], name: "token_tokenID")
}

model NftMetadata {
  id_nftMetadata Int               @id @default(autoincrement())
  id_nft         Int               @unique
  id_lot         Int
  name           String?
  collectionName String?
  description    String?           @db.VarChar(2000)
  json           Json?
  image_url      String?
  image_local    String?
  status         NFTMetadataStatus
  created_at     DateTime          @default(now())
  updated_at     DateTime          @default(now()) @updatedAt

  @@index([id_nft], name: "id_nft")
}

model Tickets {
  id_ticket     Int      @id @default(autoincrement())
  id_lot        Int
  unique_id     String
  recipient     String
  total_tickets Int
  amount        BigInt
  tokens_spent  BigInt
  bonus         Int
  block         Int      @default(0)
  created_at    DateTime @default(now())
  updated_at    DateTime @default(now()) @updatedAt

  @@unique([unique_id], name: "id_lot_id_user_unique")
  @@index([recipient], name: "recipient")
}

model User {
  id_user    String   @id @default(uuid())
  address    String   @unique
  chainId    Int
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  email    String?   @unique
  username String?   @unique
  issuedAt DateTime?
}

enum NFTMetadataStatus {
  ERROR
  FAILED
  SUCCESS
}

enum AssetType {
  ERC721
  ERC1155
  ERC20
  ERC777
  ERC1155ATOMIC
  ERC721ATOMIC
  ERC20ATOMIC
  ERC777ATOMIC
  ERC721ATOMICV2
  ERC1155ATOMICV2
  ERC20ATOMICV2
  ERC777ATOMICV2
  ERC721ATOMICV3
  ERC1155ATOMICV3
  ERC20ATOMICV3
  ERC777ATOMICV3
}

enum NetworkType {
  ETHEREUM
  GOERLI
}
