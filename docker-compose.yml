version: '3.8'

networks:
  default:


services:

  mysql-db:
    container_name: mysql-db
    image: mariadb:10.5.8
    # NOTE: use of "mysql_native_password" is not recommended: https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password
    # (this is just an example, not intended to be a production configuration)
    command: --default-authentication-plugin=mysql_native_password
    restart: "no"
    env_file: ./.env
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQLDB_PASSWORD
    ports:
      - $MYSQLDB_LOCAL_PORT:$MYSQLDB_DOCKER_PORT
    volumes:
      - mysql-volume:/var/lib/mysql:rw
      - ./mysql-db:/docker-entrypoint-initdb.d/
    networks:
      - default

  redis:
    container_name: redis
    image: redis:7.2.4
    ports:
      - $REDIS_LOCAL_PORT:$REDIS_DOCKER_PORT
    networks:
      - default

  event-listeners:
    container_name: event-listeners
    depends_on:
      - mysql-db
      - redis
    build:
      context: .
      dockerfile: ./backend/contractInteractions/Dockerfile
    restart: unless-stopped
    env_file: ./.env
    volumes:
      - ./backend/contractInteractions:/app
    networks:
      - default

  backend-app:
    container_name: backend-app
    depends_on:
      - mysql-db
      - redis
    build:
      context: .
      dockerfile: ./backend/api/Dockerfile
    restart: unless-stopped
    env_file: ./.env
    ports:
      - $BACKEND_APP_LOCAL_PORT:$BACKEND_APP_DOCKER_PORT
    volumes:
      - ./backend/api:/app
      - /app/node_modules
    environment:
      - DB_HOST=$MYSQLDB_HOST
      - DB_USER=$MYSQLDB_USER
      - DB_PASSWORD=$MYSQLDB_PASSWORD
      - DB_DATABASE=$MYSQLDB_DATABASE
      - DB_PORT=$MYSQLDB_DOCKER_PORT
    stdin_open: true
    tty: true
    networks:
      - default

  frontend-app:
    container_name: frontend-app
    depends_on:
      - backend-app
    build:
      context: .
      dockerfile: website/Dockerfile
    restart: unless-stopped
    env_file: ./.env
    ports:
      - $FRONTEND_APP_LOCAL_PORT:$FRONTEND_APP_DOCKER_PORT
    volumes:
      - ./website:/app
      - /app/node_modules
    stdin_open: true
    tty: true
    networks:
      - default

  reverse-proxy:
    container_name: nginx-reverse-proxy
    build:
      context: .
      dockerfile: nginx/Dockerfile
    depends_on:
      - backend-app
      - frontend-app
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - default

volumes:
  mysql-volume:
